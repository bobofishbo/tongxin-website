<div class="flex items-center space-x-4">
  <span class="text-sm font-medium">En</span>
  <label class="relative inline-flex items-center cursor-pointer">
    <input
      type="checkbox"
      id="languageToggle"
      class="sr-only peer"
      onchange="setLanguage(this.checked ? 'zh' : 'en')"
    />
    <div
      class="w-12 h-6 bg-gray-200 rounded-full peer-focus:ring-2 peer-focus:ring-primary peer peer-checked:after:translate-x-6 peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-primary"
    ></div>
  </label>
  <span class="text-sm font-medium">ä¸­</span>
</div>

<script client:load>
  // Function to handle language toggle
  function setLanguage(lang) {
    console.log(`Switching language to: ${lang}`);
    try {
      const url = new URL(window.location);
      url.searchParams.set("lang", lang);

      // Log the updated URL
      console.log(`Redirecting to: ${url.toString()}`);
      window.location.href = url.toString();
    } catch (error) {
      console.error("Error setting language:", error);
    }
  }

  // Initialize the toggle state on page load
  window.addEventListener("DOMContentLoaded", () => {
    try {
      const currentLang = new URL(window.location).searchParams.get("lang") || "en";
      const toggle = document.getElementById("languageToggle");
      
      // Ensure the toggle element exists
      if (!toggle) {
        console.error("Language toggle element not found!");
        return;
      }

      // Set the toggle state based on the current language
      toggle.checked = currentLang === "zh";
      console.log(`Current language on load: ${currentLang}`);
    } catch (error) {
      console.error("Error initializing language toggle:", error);
    }
  });

  // Attach the `setLanguage` function globally
  window.setLanguage = setLanguage;
</script>
